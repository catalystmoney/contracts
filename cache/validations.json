{
  "version": "3.2",
  "log": [
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "550b59ef17a8fe3f67787f0acc900db3f19c59e8e71714f0bdf9a895d6f96548",
          "withoutMetadata": "2774d3757fa47ce1ba9cf3804c196cd3276e8805d74325e0c7330c2f40f42e02",
          "linkedWithoutMetadata": "2774d3757fa47ce1ba9cf3804c196cd3276e8805d74325e0c7330c2f40f42e02"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Burnable": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol:14",
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:18",
        "version": {
          "withMetadata": "963a9238a67b6e4657c785a0d4071e970edbc6e1f74d045e8fc143e2162d972a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "046d317eb520a037d22d70b874f73f60f26943ff3c5b90fba520ad15b1c95868",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "226055fb26f2e5e7200c817b06e0c06cdfca861585cce2281ba26e6881e1560e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:16",
        "version": {
          "withMetadata": "401ebd75065b3b7c65ae19eedec365f53bbd08387b0fe76d15723f6f7247693b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Boron": {
        "src": "contracts\\Boron.sol:17",
        "version": {
          "withMetadata": "35e0375de498084e5475d6a2ad057b3eb4142b04b7b75bee8c8c874766b14210",
          "withoutMetadata": "38244cc68138bd0e919841415057e02b9360d2aabec1ff4cf906111def14b4b0",
          "linkedWithoutMetadata": "38244cc68138bd0e919841415057e02b9360d2aabec1ff4cf906111def14b4b0"
        },
        "inherit": [
          "Operator",
          "Ownable",
          "ERC20Burnable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "()",
          "burn(uint256)",
          "governanceRecoverUnsupported(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Boron",
            "src": "contracts\\Boron.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_operator",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Operator",
              "src": "contracts\\owner\\Operator.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "CBond": {
        "src": "contracts\\CBond.sol:17",
        "version": {
          "withMetadata": "d088b4adba94431a2389dd37bd187c0caca9e7da7ae386c994dc15025112dd13",
          "withoutMetadata": "df218b84bde22ca16533a29d273a86db85d9e67bc9dc7fb524dda54699dd9f31",
          "linkedWithoutMetadata": "df218b84bde22ca16533a29d273a86db85d9e67bc9dc7fb524dda54699dd9f31"
        },
        "inherit": [
          "Operator",
          "Ownable",
          "ERC20Burnable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CBond",
            "src": "contracts\\CBond.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_operator",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Operator",
              "src": "contracts\\owner\\Operator.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Cata": {
        "src": "contracts\\Cata.sol:20",
        "version": {
          "withMetadata": "2c9a1a2998424eaa2a09fe82a691d4aad2e84854578bc6006ca5f4cad2072b75",
          "withoutMetadata": "93b99dc358657df42a36b79a407ed5d813ee64caaed3b0b49ae8e352ca527bf0",
          "linkedWithoutMetadata": "93b99dc358657df42a36b79a407ed5d813ee64caaed3b0b49ae8e352ca527bf0"
        },
        "inherit": [
          "Operator",
          "Ownable",
          "ERC20Burnable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath8",
          "SafeMath"
        ],
        "methods": [
          "()",
          "setCataOracle(address)",
          "mint(address,uint256)",
          "burn(uint256)",
          "burnFrom(address,uint256)",
          "transferFrom(address,address,uint256)",
          "distributeReward(address,address)",
          "governanceRecoverUnsupported(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Cata",
            "src": "contracts\\Cata.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardPoolDistributed",
            "src": "contracts\\Cata.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_operator",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Operator",
              "src": "contracts\\owner\\Operator.sol:9"
            },
            {
              "label": "rewardPoolDistributed",
              "offset": 20,
              "slot": "6",
              "type": "t_bool",
              "contract": "Cata",
              "src": "contracts\\Cata.sol:33"
            },
            {
              "label": "cataOracle",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Cata",
              "src": "contracts\\Cata.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Lyst": {
        "src": "contracts\\Lyst.sol:18",
        "version": {
          "withMetadata": "67e946cd31c93cee77833f80c524ddbbbd936d4eb0935fb0ffffa33690d50fa3",
          "withoutMetadata": "93aefe95b96085edc5fe8997d051e8a95ebadefeda9dda6b648b380ce6a661bc",
          "linkedWithoutMetadata": "93aefe95b96085edc5fe8997d051e8a95ebadefeda9dda6b648b380ce6a661bc"
        },
        "inherit": [
          "Operator",
          "Ownable",
          "ERC20Burnable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "()",
          "distributeReward(address)",
          "burn(uint256)",
          "governanceRecoverUnsupported(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Lyst",
            "src": "contracts\\Lyst.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "rewardPoolDistributed",
            "src": "contracts\\Lyst.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_operator",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Operator",
              "src": "contracts\\owner\\Operator.sol:9"
            },
            {
              "label": "rewardPoolDistributed",
              "offset": 20,
              "slot": "6",
              "type": "t_bool",
              "contract": "Lyst",
              "src": "contracts\\Lyst.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Oracle": {
        "src": "contracts\\Oracle.sol:23",
        "version": {
          "withMetadata": "7cc7295161f36139016b7dd28930e5f03e59eafa742595742078b2fa28d7c0f8",
          "withoutMetadata": "0b6f97437c0f934cc454355da8cb14758f2573113c129a1b61523e21065c639c",
          "linkedWithoutMetadata": "0b6f97437c0f934cc454355da8cb14758f2573113c129a1b61523e21065c639c"
        },
        "inherit": [
          "Epoch",
          "Operator",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "FixedPoint",
          "SafeMath",
          "UniswapV2OracleLibrary"
        ],
        "methods": [
          "(address,uint256,uint256)",
          "setNewPeriod(uint256)",
          "setConsultLeniency(uint256)",
          "setAllowStaleConsults(bool)",
          "canUpdate()",
          "update()",
          "consult(address,uint256)",
          "twap(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Oracle",
            "src": "contracts\\Oracle.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PERIOD",
            "src": "contracts\\Oracle.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "CONSULT_LENIENCY",
            "src": "contracts\\Oracle.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "ALLOW_STALE_CONSULTS",
            "src": "contracts\\Oracle.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_operator",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Operator",
              "src": "contracts\\owner\\Operator.sol:9"
            },
            {
              "label": "period",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Epoch",
              "src": "contracts\\utils\\Epoch.sol:12"
            },
            {
              "label": "startTime",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Epoch",
              "src": "contracts\\utils\\Epoch.sol:13"
            },
            {
              "label": "lastEpochTime",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Epoch",
              "src": "contracts\\utils\\Epoch.sol:14"
            },
            {
              "label": "epoch",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Epoch",
              "src": "contracts\\utils\\Epoch.sol:15"
            },
            {
              "label": "PERIOD",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Oracle",
              "src": "contracts\\Oracle.sol:28"
            },
            {
              "label": "CONSULT_LENIENCY",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Oracle",
              "src": "contracts\\Oracle.sol:29"
            },
            {
              "label": "ALLOW_STALE_CONSULTS",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "Oracle",
              "src": "contracts\\Oracle.sol:30"
            },
            {
              "label": "token0",
              "offset": 1,
              "slot": "8",
              "type": "t_address",
              "contract": "Oracle",
              "src": "contracts\\Oracle.sol:32"
            },
            {
              "label": "token1",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Oracle",
              "src": "contracts\\Oracle.sol:33"
            },
            {
              "label": "pair",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(IUniswapV2Pair)7911",
              "contract": "Oracle",
              "src": "contracts\\Oracle.sol:34"
            },
            {
              "label": "blockTimestampLast",
              "offset": 20,
              "slot": "10",
              "type": "t_uint32",
              "contract": "Oracle",
              "src": "contracts\\Oracle.sol:37"
            },
            {
              "label": "price0CumulativeLast",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "Oracle",
              "src": "contracts\\Oracle.sol:38"
            },
            {
              "label": "price1CumulativeLast",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "Oracle",
              "src": "contracts\\Oracle.sol:39"
            },
            {
              "label": "price0Average",
              "offset": 0,
              "slot": "13",
              "type": "t_struct(uq112x112)7917_storage",
              "contract": "Oracle",
              "src": "contracts\\Oracle.sol:40"
            },
            {
              "label": "price1Average",
              "offset": 0,
              "slot": "14",
              "type": "t_struct(uq112x112)7917_storage",
              "contract": "Oracle",
              "src": "contracts\\Oracle.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV2Pair)7911": {
              "label": "contract IUniswapV2Pair",
              "numberOfBytes": "20"
            },
            "t_struct(uq112x112)7917_storage": {
              "label": "struct FixedPoint.uq112x112",
              "members": [
                {
                  "label": "_x",
                  "type": "t_uint224",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint224": {
              "label": "uint224",
              "numberOfBytes": "28"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ProfitDistribution": {
        "src": "contracts\\ProfitDistribution.sol:8",
        "version": {
          "withMetadata": "efe2fc7bd0b43a08c078572a5d31746454dafaeabb4b5aa7cd60be4b3d2a5403",
          "withoutMetadata": "92f3dec170200b28faed530126c922af095e171da504056a4f864d9da31b3aa6",
          "linkedWithoutMetadata": "92f3dec170200b28faed530126c922af095e171da504056a4f864d9da31b3aa6"
        },
        "inherit": [
          "Operator",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeERC20"
        ],
        "methods": [
          "(address)",
          "earned(address,uint256)",
          "updateDepositFee(uint256)",
          "updateMaxWithdrawFee(uint256)",
          "updateFeeTime(uint256)",
          "addReward(address)",
          "updateBurnAddress(address)",
          "updateRewardsPerEpoch(uint256,uint256)",
          "supplyRewards(uint256,uint256)",
          "withdrawRewards(uint256,uint256)",
          "stakeTokens(uint256)",
          "unstakeTokens(uint256)",
          "issueInterestToken(uint256)",
          "getPendingRewards(uint256,address)",
          "getLastSnapShotIndex(uint256,address)",
          "collectRewards()",
          "getPoolShare(address)",
          "distributeRewards()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ProfitDistribution",
            "src": "contracts\\ProfitDistribution.sol:56"
          },
          {
            "kind": "state-variable-assignment",
            "name": "name",
            "src": "contracts\\ProfitDistribution.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_operator",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Operator",
              "src": "contracts\\owner\\Operator.sol:9"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ProfitDistribution",
              "src": "contracts\\ProfitDistribution.sol:11"
            },
            {
              "label": "depositToken",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IERC20)808",
              "contract": "ProfitDistribution",
              "src": "contracts\\ProfitDistribution.sol:13"
            },
            {
              "label": "burnAddress",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "ProfitDistribution",
              "src": "contracts\\ProfitDistribution.sol:14"
            },
            {
              "label": "totalStaked",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "ProfitDistribution",
              "src": "contracts\\ProfitDistribution.sol:15"
            },
            {
              "label": "depositFee",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ProfitDistribution",
              "src": "contracts\\ProfitDistribution.sol:16"
            },
            {
              "label": "totalBurned",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "ProfitDistribution",
              "src": "contracts\\ProfitDistribution.sol:17"
            },
            {
              "label": "maxWithdrawFee",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "ProfitDistribution",
              "src": "contracts\\ProfitDistribution.sol:18"
            },
            {
              "label": "feePeriod",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "ProfitDistribution",
              "src": "contracts\\ProfitDistribution.sol:19"
            },
            {
              "label": "totalAllocation",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "ProfitDistribution",
              "src": "contracts\\ProfitDistribution.sol:22"
            },
            {
              "label": "stakers",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "ProfitDistribution",
              "src": "contracts\\ProfitDistribution.sol:24"
            },
            {
              "label": "rewardInfo",
              "offset": 0,
              "slot": "12",
              "type": "t_array(t_struct(RewardInfo)2819_storage)dyn_storage",
              "contract": "ProfitDistribution",
              "src": "contracts\\ProfitDistribution.sol:48"
            },
            {
              "label": "userInfo",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_struct(UserInfo)2838_storage)",
              "contract": "ProfitDistribution",
              "src": "contracts\\ProfitDistribution.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(RewardInfo)2819_storage)dyn_storage": {
              "label": "struct ProfitDistribution.RewardInfo[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)808": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(UserInfo)2838_storage)": {
              "label": "mapping(address => struct ProfitDistribution.UserInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(RewardInfo)2819_storage": {
              "label": "struct ProfitDistribution.RewardInfo",
              "members": [
                {
                  "label": "token",
                  "type": "t_contract(IERC20)808",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "rewardsPerEpoch",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "distributedAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "LastDistributedAmountPerAlloc",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "rewardPerAllocHistory",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(UserInfo)2838_storage": {
              "label": "struct ProfitDistribution.UserInfo",
              "members": [
                {
                  "label": "balance",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "allocation",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "hasStaked",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isStaking",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "lastStakedTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "lastSnapShotIndex",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "pendingRewards",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "LystWrapper": {
        "src": "contracts\\Reactor.sol:14",
        "version": {
          "withMetadata": "7c08796aae10d0f1d3834f13674be60389d44b8a1a9c6bedec4914a6887a900a",
          "withoutMetadata": "ff6037b37fe3373b12d09cc6758e494cf9ac42521a47d2f4dafee094bd4d68a2",
          "linkedWithoutMetadata": "ff6037b37fe3373b12d09cc6758e494cf9ac42521a47d2f4dafee094bd4d68a2"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "stake(uint256)",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "lyst",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC20)808",
              "contract": "LystWrapper",
              "src": "contracts\\Reactor.sol:18"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "LystWrapper",
              "src": "contracts\\Reactor.sol:20"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "LystWrapper",
              "src": "contracts\\Reactor.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)808": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Reactor": {
        "src": "contracts\\Reactor.sol:54",
        "version": {
          "withMetadata": "c03c0d02d5bb30286f828563cb5acd2a8d4e294260963c29cd13f1ed3b5df936",
          "withoutMetadata": "16395d2510220c9c0fd09099e244054b0c96ef7489d4b6cb60f90ef12fe16f47",
          "linkedWithoutMetadata": "16395d2510220c9c0fd09099e244054b0c96ef7489d4b6cb60f90ef12fe16f47"
        },
        "inherit": [
          "Operator",
          "Ownable",
          "Context",
          "ContractGuard",
          "LystWrapper"
        ],
        "libraries": [
          "SafeERC20",
          "Address",
          "SafeMath"
        ],
        "methods": [
          "initialize(address,address,address)",
          "setOperator(address)",
          "renounceOperator()",
          "setLockUp(uint256,uint256)",
          "latestSnapshotIndex()",
          "getLastSnapshotIndexOf(address)",
          "canWithdraw(address)",
          "canClaimReward(address)",
          "epoch()",
          "nextEpochPoint()",
          "getcataPrice()",
          "rewardPerShare()",
          "earned(address)",
          "stake(uint256)",
          "withdraw(uint256)",
          "exit()",
          "claimReward()",
          "allocateSeigniorage(uint256)",
          "governanceRecoverUnsupported(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "initialized",
            "src": "contracts\\Reactor.sol:76"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "lyst",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC20)808",
              "contract": "LystWrapper",
              "src": "contracts\\Reactor.sol:18"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "LystWrapper",
              "src": "contracts\\Reactor.sol:20"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "LystWrapper",
              "src": "contracts\\Reactor.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "ContractGuard",
              "src": "contracts\\utils\\ContractGuard.sol:6"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_operator",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Operator",
              "src": "contracts\\owner\\Operator.sol:9"
            },
            {
              "label": "initialized",
              "offset": 20,
              "slot": "5",
              "type": "t_bool",
              "contract": "Reactor",
              "src": "contracts\\Reactor.sol:76"
            },
            {
              "label": "cata",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IERC20)808",
              "contract": "Reactor",
              "src": "contracts\\Reactor.sol:78"
            },
            {
              "label": "treasury",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(ITreasury)7669",
              "contract": "Reactor",
              "src": "contracts\\Reactor.sol:79"
            },
            {
              "label": "sulfide",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_struct(Halide)4060_storage)",
              "contract": "Reactor",
              "src": "contracts\\Reactor.sol:81"
            },
            {
              "label": "reactorHistory",
              "offset": 0,
              "slot": "9",
              "type": "t_array(t_struct(ReactorSnapshot)4067_storage)dyn_storage",
              "contract": "Reactor",
              "src": "contracts\\Reactor.sol:82"
            },
            {
              "label": "withdrawLockupEpochs",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "Reactor",
              "src": "contracts\\Reactor.sol:84"
            },
            {
              "label": "rewardLockupEpochs",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "Reactor",
              "src": "contracts\\Reactor.sol:85"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(ReactorSnapshot)4067_storage)dyn_storage": {
              "label": "struct Reactor.ReactorSnapshot[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)808": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(ITreasury)7669": {
              "label": "contract ITreasury",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Halide)4060_storage)": {
              "label": "mapping(address => struct Reactor.Halide)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_struct(Halide)4060_storage": {
              "label": "struct Reactor.Halide",
              "members": [
                {
                  "label": "lastSnapshotIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "rewardEarned",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "epochTimerStart",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(ReactorSnapshot)4067_storage": {
              "label": "struct Reactor.ReactorSnapshot",
              "members": [
                {
                  "label": "time",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "rewardReceived",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "rewardPerShare",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SimpleERCFund": {
        "src": "contracts\\SimpleERCFund.sol:11",
        "version": {
          "withMetadata": "1ff52763ad0af65985e3536f6bdd49f62b5b9a8d773aa7ed8921cdc2774bc1c4",
          "withoutMetadata": "e372f8983f4823dca2b96818ab95ad73b147714cf7781417029e8b5cc51d1a7b",
          "linkedWithoutMetadata": "e372f8983f4823dca2b96818ab95ad73b147714cf7781417029e8b5cc51d1a7b"
        },
        "inherit": [
          "Operator",
          "Ownable",
          "Context",
          "ISimpleERCFund"
        ],
        "libraries": [
          "SafeERC20"
        ],
        "methods": [
          "deposit(address,uint256,string)",
          "withdraw(address,uint256,address,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_operator",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Operator",
              "src": "contracts\\owner\\Operator.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Timelock": {
        "src": "contracts\\Timelock.sol:36",
        "version": {
          "withMetadata": "2fe92bded530e704817a6a7575b1c628ed7a255463db73b9397d17b109b5e2fe",
          "withoutMetadata": "9c34def02c0bb1df6d729257d7d97aaa7ea5ee74f1287e88e39a773de4556435",
          "linkedWithoutMetadata": "9c34def02c0bb1df6d729257d7d97aaa7ea5ee74f1287e88e39a773de4556435"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "setDelay(uint256)",
          "acceptAdmin()",
          "setPendingAdmin(address)",
          "queueTransaction(address,uint256,string,bytes,uint256)",
          "cancelTransaction(address,uint256,string,bytes,uint256)",
          "executeTransaction(address,uint256,string,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Timelock",
            "src": "contracts\\Timelock.sol:56"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "admin",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Timelock",
              "src": "contracts\\Timelock.sol:50"
            },
            {
              "label": "pendingAdmin",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Timelock",
              "src": "contracts\\Timelock.sol:51"
            },
            {
              "label": "delay",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Timelock",
              "src": "contracts\\Timelock.sol:52"
            },
            {
              "label": "queuedTransactions",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "Timelock",
              "src": "contracts\\Timelock.sol:54"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Treasury": {
        "src": "contracts\\Treasury.sol:27",
        "version": {
          "withMetadata": "14aa344ee0fcd1c80bb2759e6aa83c43fd525902f528786f1e8b4acb7ec94667",
          "withoutMetadata": "d194dbf1b8119afbb9060e32952f22ac34d30996d11773cf507a59c75205e65d",
          "linkedWithoutMetadata": "d194dbf1b8119afbb9060e32952f22ac34d30996d11773cf507a59c75205e65d"
        },
        "inherit": [
          "Operator",
          "Ownable",
          "Context",
          "ContractGuard"
        ],
        "libraries": [
          "SafeERC20",
          "Address",
          "SafeMath",
          "Math"
        ],
        "methods": [
          "isInitialized()",
          "nextEpochPoint()",
          "getCataPrice()",
          "getCataUpdatedPrice()",
          "getReserve()",
          "getBurnableCataLeft()",
          "getRedeemableBonds()",
          "getBondDiscountRate()",
          "getBondPremiumRate()",
          "initialize(address,address,address,address,address,uint256)",
          "setOperator(address)",
          "renounceOperator()",
          "setReactor(address)",
          "setCataOracle(address)",
          "setCataPriceCeiling(uint256)",
          "setMaxSupplyExpansionPercents(uint256)",
          "setSupplyTiersEntry(uint8,uint256)",
          "setMaxExpansionTiersEntry(uint8,uint256)",
          "setBondDepletionFloorPercent(uint256)",
          "setMaxSupplyContractionPercent(uint256)",
          "setMaxDebtRatioPercent(uint256)",
          "setBootstrap(uint256,uint256)",
          "setExtraFunds(address,uint256,address,uint256,address,uint256)",
          "setMaxDiscountRate(uint256)",
          "setMaxPremiumRate(uint256)",
          "setDiscountPercent(uint256)",
          "setPremiumThreshold(uint256)",
          "setPremiumPercent(uint256)",
          "setMintingFactorForPayingDebt(uint256)",
          "getCataCirculatingSupply()",
          "buyBonds(uint256,uint256)",
          "redeemBonds(uint256,uint256)",
          "allocateSeigniorage()",
          "governanceRecoverUnsupported(address,uint256,address)",
          "reactorSetOperator(address)",
          "reactorSetLockUp(uint256,uint256)",
          "reactorAllocateSeigniorage(uint256)",
          "reactorGovernanceRecoverUnsupported(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "initialized",
            "src": "contracts\\Treasury.sol:39"
          },
          {
            "kind": "state-variable-assignment",
            "name": "epoch",
            "src": "contracts\\Treasury.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "epochSupplyContractionLeft",
            "src": "contracts\\Treasury.sol:44"
          },
          {
            "kind": "state-variable-assignment",
            "name": "excludedFromTotalSupply",
            "src": "contracts\\Treasury.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "ContractGuard",
              "src": "contracts\\utils\\ContractGuard.sol:6"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_operator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "Operator",
              "src": "contracts\\owner\\Operator.sol:9"
            },
            {
              "label": "initialized",
              "offset": 20,
              "slot": "2",
              "type": "t_bool",
              "contract": "Treasury",
              "src": "contracts\\Treasury.sol:39"
            },
            {
              "label": "startTime",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Treasury",
              "src": "contracts\\Treasury.sol:42"
            },
            {
              "label": "epoch",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Treasury",
              "src": "contracts\\Treasury.sol:43"
            },
            {
              "label": "epochSupplyContractionLeft",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Treasury",
              "src": "contracts\\Treasury.sol:44"
            },
            {
              "label": "excludedFromTotalSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Treasury",
              "src": "contracts\\Treasury.sol:47"
            },
            {
              "label": "cata",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Treasury",
              "src": "contracts\\Treasury.sol:52"
            },
            {
              "label": "cbond",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Treasury",
              "src": "contracts\\Treasury.sol:53"
            },
            {
              "label": "lyst",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Treasury",
              "src": "contracts\\Treasury.sol:54"
            },
            {
              "label": "reactor",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "Treasury",
              "src": "contracts\\Treasury.sol:56"
            },
            {
              "label": "cataOracle",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "Treasury",
              "src": "contracts\\Treasury.sol:57"
            },
            {
              "label": "cataPriceOne",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "Treasury",
              "src": "contracts\\Treasury.sol:60"
            },
            {
              "label": "cataPriceCeiling",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "Treasury",
              "src": "contracts\\Treasury.sol:61"
            },
            {
              "label": "seigniorageSaved",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "Treasury",
              "src": "contracts\\Treasury.sol:63"
            },
            {
              "label": "supplyTiers",
              "offset": 0,
              "slot": "15",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Treasury",
              "src": "contracts\\Treasury.sol:65"
            },
            {
              "label": "maxExpansionTiers",
              "offset": 0,
              "slot": "16",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Treasury",
              "src": "contracts\\Treasury.sol:66"
            },
            {
              "label": "maxSupplyExpansionPercent",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "Treasury",
              "src": "contracts\\Treasury.sol:68"
            },
            {
              "label": "bondDepletionFloorPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_uint256",
              "contract": "Treasury",
              "src": "contracts\\Treasury.sol:69"
            },
            {
              "label": "seigniorageExpansionFloorPercent",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "Treasury",
              "src": "contracts\\Treasury.sol:70"
            },
            {
              "label": "maxSupplyContractionPercent",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "Treasury",
              "src": "contracts\\Treasury.sol:71"
            },
            {
              "label": "maxDebtRatioPercent",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "Treasury",
              "src": "contracts\\Treasury.sol:72"
            },
            {
              "label": "bootstrapEpochs",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "Treasury",
              "src": "contracts\\Treasury.sol:75"
            },
            {
              "label": "bootstrapSupplyExpansionPercent",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "Treasury",
              "src": "contracts\\Treasury.sol:76"
            },
            {
              "label": "previousEpochCataPrice",
              "offset": 0,
              "slot": "24",
              "type": "t_uint256",
              "contract": "Treasury",
              "src": "contracts\\Treasury.sol:79"
            },
            {
              "label": "maxDiscountRate",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "Treasury",
              "src": "contracts\\Treasury.sol:80"
            },
            {
              "label": "maxPremiumRate",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "Treasury",
              "src": "contracts\\Treasury.sol:81"
            },
            {
              "label": "discountPercent",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "Treasury",
              "src": "contracts\\Treasury.sol:82"
            },
            {
              "label": "premiumThreshold",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "Treasury",
              "src": "contracts\\Treasury.sol:83"
            },
            {
              "label": "premiumPercent",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "Treasury",
              "src": "contracts\\Treasury.sol:84"
            },
            {
              "label": "mintingFactorForPayingDebt",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "Treasury",
              "src": "contracts\\Treasury.sol:85"
            },
            {
              "label": "daoFund",
              "offset": 0,
              "slot": "31",
              "type": "t_address",
              "contract": "Treasury",
              "src": "contracts\\Treasury.sol:87"
            },
            {
              "label": "daoFundSharedPercent",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "Treasury",
              "src": "contracts\\Treasury.sol:88"
            },
            {
              "label": "devFund",
              "offset": 0,
              "slot": "33",
              "type": "t_address",
              "contract": "Treasury",
              "src": "contracts\\Treasury.sol:92"
            },
            {
              "label": "devFundSharedPercent",
              "offset": 0,
              "slot": "34",
              "type": "t_uint256",
              "contract": "Treasury",
              "src": "contracts\\Treasury.sol:93"
            },
            {
              "label": "teamFund",
              "offset": 0,
              "slot": "35",
              "type": "t_address",
              "contract": "Treasury",
              "src": "contracts\\Treasury.sol:94"
            },
            {
              "label": "teamFundSharedPercent",
              "offset": 0,
              "slot": "36",
              "type": "t_uint256",
              "contract": "Treasury",
              "src": "contracts\\Treasury.sol:95"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBasisAsset": {
        "src": "contracts\\interfaces\\IBasisAsset.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(uint256)",
          "burnFrom(address,uint256)",
          "isOperator()",
          "operator()",
          "transferOperator(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IOracle": {
        "src": "contracts\\interfaces\\IOracle.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "update()",
          "consult(address,uint256)",
          "twap(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IReactor": {
        "src": "contracts\\interfaces\\IReactor.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "earned(address)",
          "canWithdraw(address)",
          "canClaimReward(address)",
          "epoch()",
          "nextEpochPoint()",
          "getCataPrice()",
          "setOperator(address)",
          "setLockUp(uint256,uint256)",
          "stake(uint256)",
          "withdraw(uint256)",
          "exit()",
          "claimReward()",
          "allocateSeigniorage(uint256)",
          "governanceRecoverUnsupported(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISimpleERCFund": {
        "src": "contracts\\interfaces\\ISimpleERCFund.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(address,uint256,string)",
          "withdraw(address,uint256,address,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITreasury": {
        "src": "contracts\\interfaces\\ITreasury.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "epoch()",
          "nextEpochPoint()",
          "getcataPrice()",
          "buyBonds(uint256,uint256)",
          "redeemBonds(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts\\interfaces\\IUniswapV2Pair.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "FixedPoint": {
        "src": "contracts\\libraries\\FixedPoint.sol:8",
        "version": {
          "withMetadata": "48fd8897e1cb91d28ca922f62fa1a553f9af3335e4a5d300581886ca0bd15a91",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Silicon"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath8": {
        "src": "contracts\\libraries\\SafeMath8.sol:18",
        "version": {
          "withMetadata": "a5f67ddde6136c80ba57247ad8e008f7f254cd1670634acdbee1330523d16bb6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Silicon": {
        "src": "contracts\\libraries\\Silicon.sol:5",
        "version": {
          "withMetadata": "3426c8e3302c66a0383a328bfbfce3979838c857d29867eab540b9e1d8f9fa26",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "UniswapV2OracleLibrary": {
        "src": "contracts\\libraries\\UniswapV2OracleLibrary.sol:9",
        "version": {
          "withMetadata": "1e4d58733768946b4845711719741106c09977cdc7d9bdcdb4fe77b875342a78",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "FixedPoint"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Operator": {
        "src": "contracts\\owner\\Operator.sol:8",
        "version": {
          "withMetadata": "754ac3651e2a9f8729c8240f8bf85b86dc0f613235bf5f3c1ddb50f09ef30404",
          "withoutMetadata": "10341345e6669c826b54bf3bc2790ce634b520cb059ae2f0d8700ee686155685",
          "linkedWithoutMetadata": "10341345e6669c826b54bf3bc2790ce634b520cb059ae2f0d8700ee686155685"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "operator()",
          "isOperator()",
          "transferOperator(address)",
          "_renounceOperator()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Operator",
            "src": "contracts\\owner\\Operator.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_operator",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Operator",
              "src": "contracts\\owner\\Operator.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "CataGenPools": {
        "src": "contracts\\pools\\CataGenPools.sol:12",
        "version": {
          "withMetadata": "0ce8bde3e80d0a8de89e78ff4ac21ad21537f2b8c2b960b86656471e9332780b",
          "withoutMetadata": "fafd1c09f08b9ab789ddebb3eadc7283e5cfa8ccf24ab73e93ef789f2df6ef6d",
          "linkedWithoutMetadata": "fafd1c09f08b9ab789ddebb3eadc7283e5cfa8ccf24ab73e93ef789f2df6ef6d"
        },
        "inherit": [
          "ReentrancyGuard"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "(address,address,uint256)",
          "add(uint256,address,bool,uint256)",
          "set(uint256,uint256)",
          "getGeneratedReward(uint256,uint256)",
          "pendingCata(uint256,address)",
          "massUpdatePools()",
          "deposit(uint256,uint256)",
          "withdraw(uint256,uint256)",
          "emergencyWithdraw(uint256)",
          "setOperator(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CataGenPools",
            "src": "contracts\\pools\\CataGenPools.sol:65"
          },
          {
            "kind": "state-variable-assignment",
            "name": "totalAllocPoint",
            "src": "contracts\\pools\\CataGenPools.sol:44"
          },
          {
            "kind": "state-variable-assignment",
            "name": "cataPerSecond",
            "src": "contracts\\pools\\CataGenPools.sol:55"
          },
          {
            "kind": "state-variable-assignment",
            "name": "runningTime",
            "src": "contracts\\pools\\CataGenPools.sol:56"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "operator",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "CataGenPools",
              "src": "contracts\\pools\\CataGenPools.sol:17"
            },
            {
              "label": "cata",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IERC20)808",
              "contract": "CataGenPools",
              "src": "contracts\\pools\\CataGenPools.sol:34"
            },
            {
              "label": "poolInfo",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_struct(PoolInfo)8685_storage)dyn_storage",
              "contract": "CataGenPools",
              "src": "contracts\\pools\\CataGenPools.sol:38"
            },
            {
              "label": "userInfo",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)8673_storage))",
              "contract": "CataGenPools",
              "src": "contracts\\pools\\CataGenPools.sol:41"
            },
            {
              "label": "totalAllocPoint",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "CataGenPools",
              "src": "contracts\\pools\\CataGenPools.sol:44"
            },
            {
              "label": "poolStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "CataGenPools",
              "src": "contracts\\pools\\CataGenPools.sol:47"
            },
            {
              "label": "poolEndTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "CataGenPools",
              "src": "contracts\\pools\\CataGenPools.sol:50"
            },
            {
              "label": "daoFundAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CataGenPools",
              "src": "contracts\\pools\\CataGenPools.sol:52"
            },
            {
              "label": "cataPerSecond",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "CataGenPools",
              "src": "contracts\\pools\\CataGenPools.sol:55"
            },
            {
              "label": "runningTime",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "CataGenPools",
              "src": "contracts\\pools\\CataGenPools.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(PoolInfo)8685_storage)dyn_storage": {
              "label": "struct CataGenPools.PoolInfo[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)808": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(UserInfo)8673_storage)": {
              "label": "mapping(address => struct CataGenPools.UserInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)8673_storage))": {
              "label": "mapping(uint256 => mapping(address => struct CataGenPools.UserInfo))",
              "numberOfBytes": "32"
            },
            "t_struct(PoolInfo)8685_storage": {
              "label": "struct CataGenPools.PoolInfo",
              "members": [
                {
                  "label": "token",
                  "type": "t_contract(IERC20)808",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "allocPoint",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastRewardTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "accCataPerShare",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "isStarted",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(UserInfo)8673_storage": {
              "label": "struct CataGenPools.UserInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "rewardDebt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "LystRewardPool": {
        "src": "contracts\\pools\\LystRewardPools.sol:12",
        "version": {
          "withMetadata": "ef9a3715308faf45142c67cecd80a77301612def7b0b2255a0aaaf00d30232a7",
          "withoutMetadata": "8a2930f37738499fd7ec41499d08aa6b7a7f8046b58c210fa4618d49669dc794",
          "linkedWithoutMetadata": "8a2930f37738499fd7ec41499d08aa6b7a7f8046b58c210fa4618d49669dc794"
        },
        "inherit": [
          "ReentrancyGuard"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "(address,address,uint256)",
          "add(uint256,uint256,address,bool,uint256)",
          "set(uint256,uint256,uint256)",
          "getGeneratedReward(uint256,uint256)",
          "pendingShare(uint256,address)",
          "massUpdatePools()",
          "deposit(uint256,uint256)",
          "withdraw(uint256,uint256)",
          "emergencyWithdraw(uint256)",
          "setOperator(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "LystRewardPool",
            "src": "contracts\\pools\\LystRewardPools.sol:63"
          },
          {
            "kind": "state-variable-assignment",
            "name": "totalAllocPoint",
            "src": "contracts\\pools\\LystRewardPools.sol:44"
          },
          {
            "kind": "state-variable-assignment",
            "name": "lystPerSecond",
            "src": "contracts\\pools\\LystRewardPools.sol:54"
          },
          {
            "kind": "state-variable-assignment",
            "name": "runningTime",
            "src": "contracts\\pools\\LystRewardPools.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "operator",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "LystRewardPool",
              "src": "contracts\\pools\\LystRewardPools.sol:17"
            },
            {
              "label": "Lyst",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IERC20)808",
              "contract": "LystRewardPool",
              "src": "contracts\\pools\\LystRewardPools.sol:35"
            },
            {
              "label": "poolInfo",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_struct(PoolInfo)9719_storage)dyn_storage",
              "contract": "LystRewardPool",
              "src": "contracts\\pools\\LystRewardPools.sol:38"
            },
            {
              "label": "userInfo",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)9705_storage))",
              "contract": "LystRewardPool",
              "src": "contracts\\pools\\LystRewardPools.sol:41"
            },
            {
              "label": "totalAllocPoint",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "LystRewardPool",
              "src": "contracts\\pools\\LystRewardPools.sol:44"
            },
            {
              "label": "poolStartTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "LystRewardPool",
              "src": "contracts\\pools\\LystRewardPools.sol:47"
            },
            {
              "label": "poolEndTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "LystRewardPool",
              "src": "contracts\\pools\\LystRewardPools.sol:50"
            },
            {
              "label": "daoFundAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "LystRewardPool",
              "src": "contracts\\pools\\LystRewardPools.sol:52"
            },
            {
              "label": "lystPerSecond",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "LystRewardPool",
              "src": "contracts\\pools\\LystRewardPools.sol:54"
            },
            {
              "label": "runningTime",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "LystRewardPool",
              "src": "contracts\\pools\\LystRewardPools.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(PoolInfo)9719_storage)dyn_storage": {
              "label": "struct LystRewardPool.PoolInfo[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)808": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(UserInfo)9705_storage)": {
              "label": "mapping(address => struct LystRewardPool.UserInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)9705_storage))": {
              "label": "mapping(uint256 => mapping(address => struct LystRewardPool.UserInfo))",
              "numberOfBytes": "32"
            },
            "t_struct(PoolInfo)9719_storage": {
              "label": "struct LystRewardPool.PoolInfo",
              "members": [
                {
                  "label": "token",
                  "type": "t_contract(IERC20)808",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "depFee",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "allocPoint",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "lastRewardTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accLystPerShare",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "isStarted",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(UserInfo)9705_storage": {
              "label": "struct LystRewardPool.UserInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "rewardDebt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ContractGuard": {
        "src": "contracts\\utils\\ContractGuard.sol:5",
        "version": {
          "withMetadata": "0f1789c132a28d84aeab82fdfc12697c46b83415ef7a1b3e57672d3f5b9a8a58",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "ContractGuard",
              "src": "contracts\\utils\\ContractGuard.sol:6"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Epoch": {
        "src": "contracts\\utils\\Epoch.sol:9",
        "version": {
          "withMetadata": "a6053f27e0ade440579ac59528c7456fa27caeb13a483bae954959cf40745ff1",
          "withoutMetadata": "bf522d9825edc0efc26c14dce0d1dbd9cfb1e8302197198dceee6f27537ed31d",
          "linkedWithoutMetadata": "bf522d9825edc0efc26c14dce0d1dbd9cfb1e8302197198dceee6f27537ed31d"
        },
        "inherit": [
          "Operator",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(uint256,uint256,uint256)",
          "getCurrentEpoch()",
          "getPeriod()",
          "getStartTime()",
          "getLastEpochTime()",
          "nextEpochPoint()",
          "setPeriod(uint256)",
          "setEpoch(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Epoch",
            "src": "contracts\\utils\\Epoch.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_operator",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Operator",
              "src": "contracts\\owner\\Operator.sol:9"
            },
            {
              "label": "period",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Epoch",
              "src": "contracts\\utils\\Epoch.sol:12"
            },
            {
              "label": "startTime",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Epoch",
              "src": "contracts\\utils\\Epoch.sol:13"
            },
            {
              "label": "lastEpochTime",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Epoch",
              "src": "contracts\\utils\\Epoch.sol:14"
            },
            {
              "label": "epoch",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Epoch",
              "src": "contracts\\utils\\Epoch.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Distributor": {
        "src": "contracts\\Distributor.sol:7",
        "version": {
          "withMetadata": "7884402e088633c752cf8ca03e22cae8b7ad37c6fceaaaa6d7019f2f14e93622",
          "withoutMetadata": "0df45f63360e18e5e3e0e57a85605f2b85f6788b14a00f6304ca82c7222416c0",
          "linkedWithoutMetadata": "0df45f63360e18e5e3e0e57a85605f2b85f6788b14a00f6304ca82c7222416c0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(contract IDistributor[])",
          "distribute()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Distributor",
            "src": "contracts\\Distributor.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "distributors",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_contract(IDistributor)48)dyn_storage",
              "contract": "Distributor",
              "src": "contracts\\Distributor.sol:8"
            }
          ],
          "types": {
            "t_array(t_contract(IDistributor)48)dyn_storage": {
              "label": "contract IDistributor[]",
              "numberOfBytes": "32"
            },
            "t_contract(IDistributor)48": {
              "label": "contract IDistributor",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IDistributor": {
        "src": "contracts\\interfaces\\IDistributor.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "distribute()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    }
  ]
}